{"version":3,"sources":["components/Flags.js","hooks/useLongPress.js","components/PinnedItem.js","assets/empty-pinned.svg","components/EmptyPinned.js","views/Dashboard.js"],"names":["Flags","currencyId","children","useContext","StoreContext","countries","flags","filter","country","initialIndex","length","Math","floor","random","useState","index","setIndex","flagsImages","map","i","className","src","id","toLowerCase","alt","name","useEffect","timeout","newIndex","setTimeout","clearTimeout","preventDefault","event","isTouchEvent","touches","useLongPress","onLongPress","onClick","shouldPreventDefault","delay","longPressTriggered","setLongPressTriggered","useRef","target","start","useCallback","addEventListener","passive","current","clear","shouldTriggerClick","removeEventListener","onMouseDown","e","onTouchStart","onMouseUp","onMouseLeave","onTouchEnd","PinedItem","currency","dispatch","longPressEvent","window","navigator","vibrate","type","payload","valueUnit","currentValue","toFixed","valueDecimal","split","trendValue","previousValue","trendDirection","parseFloat","tabIndex","role","currencyName","currencySymbol","EmptyPinned","image","Dashboard","defaults","pinnedCurrencies","pinnedItems","PinnedItem","isMounted","forEach","lastFetch","Date","now","Promise","all","getConversion","getQuickHistory","then","responses","endResponse","obj","Object","values","data","reduce","acc","entry","to","pathname","state","callBackActionName","aria-label","xmlns","height","viewBox","width","d","fill"],"mappings":"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","file":"static/js/4.abd5c4e5.chunk.js","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\r\nimport { StoreContext } from \"../store/store-context\";\r\nimport \"../styles/Flags.scss\";\r\n\r\nfunction Flags({ currencyId, children }) {\r\n  const [{ countries }] = useContext(StoreContext);\r\n  const flags = countries ? countries.filter(country => country.currencyId === currencyId) : [];\r\n  const initialIndex = flags.length > 1 ? Math.floor(Math.random() * flags.length) : 0;\r\n  const [index, setIndex] = useState(initialIndex);\r\n  const flagsImages = flags.length ? flags.map((country, i) => <img className={(i === index) ? \"flags__flag flags__flag--show\" : \"flags__flag\" } src={`https://flagcdn.com/${country.id.toLowerCase()}.svg`} alt={country.name} key={country.id} />) : <div className=\"flags__flag--missing\"></div>;\r\n\r\n  useEffect(() => {\r\n    let timeout;\r\n    if (flags.length > 1) {\r\n      const newIndex = (index + 1) === flags.length ? 0 : index + 1;\r\n      timeout = setTimeout(() => setIndex(newIndex), 2400);\r\n    }\r\n    return () => clearTimeout(timeout);\r\n  }, [index, flags.length]);\r\n\r\n  return (\r\n    <div className=\"flags\">\r\n      {flagsImages}\r\n      {children && <div className=\"flags__data\">{children}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Flags;","import { useCallback, useRef, useState } from \"react\";\r\n\r\nconst useLongPress = (\r\n    onLongPress,\r\n    onClick,\r\n    { shouldPreventDefault = true, delay = 500 } = {}\r\n) => {\r\n    const [longPressTriggered, setLongPressTriggered] = useState(false);\r\n    const timeout = useRef();\r\n    const target = useRef();\r\n\r\n    const start = useCallback(\r\n        event => {\r\n            if (shouldPreventDefault && event.target) {\r\n                event.target.addEventListener(\"touchend\", preventDefault, {\r\n                    passive: false\r\n                });\r\n                target.current = event.target;\r\n            }\r\n            timeout.current = setTimeout(() => {\r\n                setLongPressTriggered(true);\r\n                onLongPress(event);\r\n            }, delay);\r\n        },\r\n        [onLongPress, delay, shouldPreventDefault]\r\n    );\r\n\r\n    const clear = useCallback(\r\n        (event, shouldTriggerClick = true) => {\r\n            timeout.current && clearTimeout(timeout.current);\r\n            shouldTriggerClick && !longPressTriggered && onClick();\r\n            setLongPressTriggered(false);\r\n            if (shouldPreventDefault && target.current) {\r\n                target.current.removeEventListener(\"touchend\", preventDefault);\r\n            }\r\n        },\r\n        [shouldPreventDefault, onClick, longPressTriggered]\r\n    );\r\n\r\n    return {\r\n        onMouseDown: e => start(e),\r\n        onTouchStart: e => start(e),\r\n        onMouseUp: e => clear(e),\r\n        onMouseLeave: e => clear(e, false),\r\n        onTouchEnd: e => clear(e)\r\n    };\r\n};\r\n\r\nconst isTouchEvent = event => {\r\n    return \"touches\" in event;\r\n};\r\n\r\nconst preventDefault = event => {\r\n    if (!isTouchEvent(event)) return;\r\n\r\n    if (event.touches.length < 2 && event.preventDefault) {\r\n        event.preventDefault();\r\n    }\r\n};\r\n\r\nexport default useLongPress;","import Flags from \"./Flags\";\r\nimport useLongPress from \"../hooks/useLongPress\";\r\nimport { useContext } from \"react\";\r\nimport { StoreContext } from \"../store/store-context\";\r\n\r\nfunction PinedItem({ currency }) {\r\n  const [, dispatch] = useContext(StoreContext);\r\n  const onLongPress = () => {\r\n    if (\"vibrate\" in window.navigator) {\r\n      window.navigator.vibrate(24);\r\n    }\r\n    dispatch({\r\n      type: \"removePinnedCurrency\",\r\n      payload: currency\r\n    });\r\n  };\r\n  const onClick = () => {\r\n    // Navigate to detail page\r\n  }\r\n  const longPressOptions = {\r\n    shouldPreventDefault: true,\r\n    delay: 1500\r\n  };\r\n  const longPressEvent = useLongPress(onLongPress, onClick, longPressOptions);\r\n\r\n  const valueUnit = currency.currentValue ? currency.currentValue.toFixed(0) : \"0\";\r\n  const valueDecimal = currency.currentValue ? `.${currency.currentValue.toFixed(2).split(\".\")[1]}` : \".00\";\r\n  const trendValue = currency.currentValue && currency.previousValue ? (((100 / currency.previousValue) * currency.currentValue) - 100).toFixed(2) : \"0\";\r\n  const trendDirection = parseFloat(trendValue) >= 0;\r\n\r\n  return (\r\n    <div className=\"pinned__item\" tabIndex=\"0\" role=\"button\" {...longPressEvent}>\r\n      <Flags currencyId={currency.id}>\r\n        {currency.currencyName}\r\n        <div>{currency.id}</div>\r\n      </Flags>\r\n      <div className=\"pinned__values pinned-values\">\r\n        <div className=\"pinned-values__value\">{currency.currencySymbol} {valueUnit}<span className=\"currency__decimal\">{valueDecimal}</span></div>\r\n        <div className={ trendDirection ? \"pinned-values__trend pinned-values__trend--up\" : \"pinned-values__trend pinned-values__trend--down\"}>{ trendDirection ? `+${trendValue}` : trendValue }%</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PinedItem;","export default __webpack_public_path__ + \"static/media/empty-pinned.2b827caa.svg\";","import image from \"../assets/empty-pinned.svg\"\r\n\r\nfunction EmptyPinned() {\r\n  return (\r\n    <div className=\"pinned__empty pinned-empty\">\r\n      <img className=\"pinned-empty__image\" src={image} alt=\"Drawing of a girl next to a list of pinned items\" />\r\n      <p>There are no pinned currencies at the moment.</p>\r\n      <p>Pin a currency using the \"+\" button.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyPinned;","import { useContext, useEffect } from 'react';\r\nimport { StoreContext } from '../store/store-context';\r\nimport Flags from \"../components/Flags\";\r\nimport \"../styles/Dashboard.scss\";\r\nimport PinnedItem from \"../components/PinnedItem\";\r\nimport EmptyPinned from \"../components/EmptyPinned\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getConversion, getQuickHistory } from \"../services/App-service\";\r\n\r\nfunction Dashboard() {\r\n  const [{ defaults, pinnedCurrencies }, dispatch] = useContext(StoreContext);\r\n  const pinnedItems = pinnedCurrencies.length ? pinnedCurrencies.map(currency => <PinnedItem currency={currency} key={currency.id} />) : <EmptyPinned />;\r\n\r\n  useEffect(() => {\r\n    let isMounted = false;\r\n    if (!isMounted) {\r\n      pinnedCurrencies.forEach(currency => {\r\n        if (!(\"lastFetch\" in currency) || currency.lastFetch >= (Date.now() + 360000)) {\r\n          Promise.all([getConversion(defaults.currency.id, currency.id), getQuickHistory(defaults.currency.id, currency.id)])\r\n            .then(responses => {\r\n              const endResponse = responses.map(obj => Object.values(obj.data)[0]).reduce((acc, entry) => {\r\n                  if (typeof entry === \"object\") {\r\n                      acc[\"previousValue\"] = Object.values(entry)[0];\r\n                  } else {\r\n                      acc[\"currentValue\"] = entry;\r\n                  }\r\n                  return acc;\r\n              }, {});\r\n              const payload = {...currency, ...endResponse};\r\n              payload.lastFetch = Date.now();\r\n              dispatch({\r\n                type: \"updatePinnedCurrency\",\r\n                payload\r\n              });\r\n            });\r\n        }\r\n      });\r\n    }\r\n    return () => isMounted = true;\r\n  }, [pinnedCurrencies, defaults, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"base\">\r\n        <div className=\"base__top top\">\r\n          <h1 className=\"base__title\">Dashboard</h1>\r\n        </div>\r\n        <div className=\"base__container\">\r\n          <Flags currencyId={defaults.currency.id}>\r\n            {defaults.currency.currencyName}\r\n            <div>{defaults.currency.id}</div>\r\n          </Flags>\r\n          <div className=\"base__currency currency\">{defaults.currency.currencySymbol} 1<span className=\"currency__decimal\">.00</span></div>\r\n        </div>\r\n      </header>\r\n      <section className=\"pinned page\">\r\n        <h2 className=\"pinned__title\">Pinned currencies</h2>\r\n        { pinnedItems }\r\n        <Link to={{ pathname: \"/currency-select\", state: { callBackActionName: \"pinCurrency\" }}} className=\"fab\" aria-label=\"Add new item\"><svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/></svg></Link>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}